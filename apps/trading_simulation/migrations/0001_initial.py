# Generated by Django 5.2.4 on 2025-07-16 12:41

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            "market_data",
            "0002_dataingestionlog_exchange_fundamentaldata_industry_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SimulationScenario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "scenario_type",
                    models.CharField(
                        choices=[
                            ("NORMAL", "Normal Market"),
                            ("VOLATILE", "High Volatility"),
                            ("TRENDING_UP", "Bull Market"),
                            ("TRENDING_DOWN", "Bear Market"),
                            ("CRASH", "Market Crash"),
                            ("RECOVERY", "Market Recovery"),
                            ("LOW_LIQUIDITY", "Low Liquidity"),
                            ("CUSTOM", "Custom Scenario"),
                        ],
                        default="NORMAL",
                        max_length=50,
                    ),
                ),
                (
                    "volatility_factor",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("1.0000"), max_digits=6
                    ),
                ),
                (
                    "volume_factor",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("1.0000"), max_digits=6
                    ),
                ),
                (
                    "liquidity_factor",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("1.0000"), max_digits=6
                    ),
                ),
                (
                    "daily_drift_percentage",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Daily price drift as percentage",
                        max_digits=8,
                    ),
                ),
            ],
            options={
                "db_table": "simulation_scenarios",
            },
        ),
        migrations.CreateModel(
            name="SimulatedExchange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("PAUSED", "Paused"),
                            ("STOPPED", "Stopped"),
                            ("MAINTENANCE", "Maintenance"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                (
                    "trading_fee_percentage",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0010"),
                        help_text="Simulated trading fee as percentage (0.0010 = 0.1%)",
                        max_digits=6,
                    ),
                ),
                (
                    "minimum_order_size",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.00"), max_digits=10
                    ),
                ),
                (
                    "maximum_order_size",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1000000.00"), max_digits=15
                    ),
                ),
                (
                    "simulated_latency_ms",
                    models.IntegerField(
                        default=50,
                        help_text="Simulated order processing latency in milliseconds",
                    ),
                ),
                (
                    "enable_market_making",
                    models.BooleanField(
                        default=True,
                        help_text="Enable simulated market makers for liquidity",
                    ),
                ),
                (
                    "real_exchange",
                    models.ForeignKey(
                        help_text="Real exchange to source market data from",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="market_data.exchange",
                    ),
                ),
            ],
            options={
                "db_table": "simulation_exchanges",
            },
        ),
        migrations.CreateModel(
            name="MarketMaker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "algorithm_type",
                    models.CharField(
                        choices=[
                            ("BASIC", "Basic Spread"),
                            ("ADAPTIVE", "Adaptive Spread"),
                            ("RANDOM_WALK", "Random Walk"),
                            ("TREND_FOLLOWING", "Trend Following"),
                        ],
                        default="BASIC",
                        max_length=50,
                    ),
                ),
                (
                    "default_spread_bps",
                    models.IntegerField(
                        default=10, help_text="Default bid-ask spread in basis points"
                    ),
                ),
                (
                    "max_position_size",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100000.00"), max_digits=15
                    ),
                ),
                (
                    "quote_size",
                    models.IntegerField(
                        default=100, help_text="Default quantity for quotes"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "exchange",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="market_makers",
                        to="trading_simulation.simulatedexchange",
                    ),
                ),
            ],
            options={
                "db_table": "simulation_market_makers",
            },
        ),
        migrations.CreateModel(
            name="SimulatedInstrument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_tradable", models.BooleanField(default=True)),
                (
                    "price_multiplier",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("1.0000"),
                        help_text="Multiply real price by this factor for simulation scenarios",
                        max_digits=8,
                    ),
                ),
                (
                    "min_price_increment",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.01"),
                        help_text="Minimum price increment (tick size)",
                        max_digits=10,
                    ),
                ),
                (
                    "max_daily_volume",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Maximum shares that can be traded per day",
                        null=True,
                    ),
                ),
                (
                    "volatility_multiplier",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("1.0000"),
                        help_text="Multiply real volatility for simulation scenarios",
                        max_digits=6,
                    ),
                ),
                (
                    "exchange",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="trading_simulation.simulatedexchange",
                    ),
                ),
                (
                    "real_ticker",
                    models.ForeignKey(
                        help_text="Real ticker to source market data from",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="market_data.ticker",
                    ),
                ),
            ],
            options={
                "db_table": "simulation_instruments",
                "unique_together": {("real_ticker", "exchange")},
            },
        ),
        migrations.CreateModel(
            name="TradingSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("CONTINUOUS", "Continuous Trading"),
                            ("AUCTION", "Auction Based"),
                            ("CALL_MARKET", "Call Market"),
                        ],
                        default="CONTINUOUS",
                        max_length=20,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("PAUSED", "Paused"),
                            ("STOPPED", "Stopped"),
                            ("MAINTENANCE", "Maintenance"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("allow_short_selling", models.BooleanField(default=True)),
                ("allow_margin_trading", models.BooleanField(default=False)),
                (
                    "circuit_breaker_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("10.00"),
                        help_text="Price movement % that triggers circuit breaker",
                        max_digits=5,
                    ),
                ),
                (
                    "exchange",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trading_sessions",
                        to="trading_simulation.simulatedexchange",
                    ),
                ),
            ],
            options={
                "db_table": "simulation_trading_sessions",
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="UserSimulationProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "virtual_cash_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100000.00"),
                        help_text="Virtual cash for paper trading",
                        max_digits=15,
                    ),
                ),
                (
                    "initial_virtual_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100000.00"), max_digits=15
                    ),
                ),
                ("default_order_size", models.IntegerField(default=100)),
                (
                    "risk_tolerance",
                    models.CharField(
                        choices=[
                            ("CONSERVATIVE", "Conservative"),
                            ("MODERATE", "Moderate"),
                            ("AGGRESSIVE", "Aggressive"),
                        ],
                        default="MODERATE",
                        max_length=20,
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("BEGINNER", "Beginner"),
                            ("INTERMEDIATE", "Intermediate"),
                            ("ADVANCED", "Advanced"),
                            ("PROFESSIONAL", "Professional"),
                        ],
                        default="BEGINNER",
                        max_length=20,
                    ),
                ),
                ("enable_margin_trading", models.BooleanField(default=False)),
                ("enable_options_trading", models.BooleanField(default=False)),
                ("enable_short_selling", models.BooleanField(default=False)),
                ("total_trades_executed", models.IntegerField(default=0)),
                ("profitable_trades", models.IntegerField(default=0)),
                (
                    "current_portfolio_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100000.00"), max_digits=15
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="simulation_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "simulation_user_profiles",
            },
        ),
        migrations.CreateModel(
            name="SimulatedPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Current position size (positive=long, negative=short)",
                        max_digits=15,
                    ),
                ),
                (
                    "average_cost",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Average cost per share/unit",
                        max_digits=15,
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total cost basis of position",
                        max_digits=15,
                    ),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "market_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "unrealized_pnl",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "realized_pnl",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "total_fees_paid",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("first_trade_timestamp", models.DateTimeField(auto_now_add=True)),
                ("last_trade_timestamp", models.DateTimeField(auto_now=True)),
                (
                    "daily_pnl",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "position_var",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Position Value at Risk (1-day, 95%)",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="trading_simulation.simulatedinstrument",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="simulated_positions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "simulation_positions",
                "indexes": [
                    models.Index(
                        fields=["user", "quantity"],
                        name="simulation__user_id_b67601_idx",
                    ),
                    models.Index(
                        fields=["instrument", "market_value"],
                        name="simulation__instrum_ba14f7_idx",
                    ),
                ],
                "unique_together": {("user", "instrument")},
            },
        ),
    ]
