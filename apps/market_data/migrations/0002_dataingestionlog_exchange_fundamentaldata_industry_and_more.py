# Generated by Django 5.2.4 on 2025-07-16 12:41

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("market_data", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataIngestionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("symbols_requested", models.JSONField(default=list)),
                ("symbols_successful", models.JSONField(default=list)),
                ("symbols_failed", models.JSONField(default=list)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("records_inserted", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("PARTIAL", "Partially Completed"),
                        ],
                        default="RUNNING",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                (
                    "execution_time_seconds",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="Exchange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("country", models.CharField(max_length=2)),
                ("currency", models.CharField(max_length=3)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("trading_hours", models.JSONField(default=dict)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FundamentalData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("report_date", models.DateField()),
                ("period_type", models.CharField(max_length=20)),
                (
                    "pe_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "pb_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ps_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "peg_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "roe",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "roa",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "roic",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "profit_margin",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "debt_to_equity",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "current_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "quick_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "revenue_growth",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "earnings_growth",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "net_income",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "total_assets",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "total_debt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Industry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("base_currency", models.CharField(default="USD", max_length=3)),
                (
                    "initial_cash",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100000"), max_digits=20
                    ),
                ),
                (
                    "current_cash",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("100000"), max_digits=20
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=20)),
                ("avg_cost", models.DecimalField(decimal_places=6, max_digits=20)),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=20, null=True
                    ),
                ),
                ("first_purchase_date", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TechnicalIndicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("timestamp", models.DateTimeField()),
                ("timeframe", models.CharField(default="1d", max_length=10)),
                ("indicator_name", models.CharField(max_length=50)),
                (
                    "value",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=20, null=True
                    ),
                ),
                ("values", models.JSONField(blank=True, null=True)),
                ("parameters", models.JSONField(default=dict)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="marketdata",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="datasource",
            name="api_endpoint",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="datasource",
            name="rate_limit_per_minute",
            field=models.IntegerField(default=60),
        ),
        migrations.AddField(
            model_name="datasource",
            name="requires_api_key",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="datasource",
            name="supported_markets",
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name="datasource",
            name="supported_timeframes",
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name="marketdata",
            name="data_source",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="market_data.datasource",
            ),
        ),
        migrations.AddField(
            model_name="marketdata",
            name="is_adjusted",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="marketdata",
            name="timeframe",
            field=models.CharField(default="1d", max_length=10),
        ),
        migrations.AddField(
            model_name="marketdata",
            name="transactions",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="marketdata",
            name="vwap",
            field=models.DecimalField(
                blank=True, decimal_places=6, max_digits=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="ticker",
            name="alpha_vantage_symbol",
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AddField(
            model_name="ticker",
            name="country",
            field=models.CharField(blank=True, max_length=2),
        ),
        migrations.AddField(
            model_name="ticker",
            name="last_updated",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ticker",
            name="market_cap",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="ticker",
            name="shares_outstanding",
            field=models.DecimalField(
                blank=True, decimal_places=0, max_digits=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="ticker",
            name="yfinance_symbol",
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AlterField(
            model_name="marketdata",
            name="ticker",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="market_data",
                to="market_data.ticker",
            ),
        ),
        migrations.AlterField(
            model_name="marketdata",
            name="timestamp",
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="ticker",
            name="name",
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name="ticker",
            name="symbol",
            field=models.CharField(db_index=True, max_length=20),
        ),
        migrations.AlterUniqueTogether(
            name="marketdata",
            unique_together={("ticker", "timestamp", "timeframe", "data_source")},
        ),
        migrations.AddIndex(
            model_name="marketdata",
            index=models.Index(
                fields=["ticker", "timeframe", "timestamp"],
                name="market_data_ticker__678912_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="marketdata",
            index=models.Index(
                fields=["timestamp"], name="market_data_timesta_8a9a77_idx"
            ),
        ),
        migrations.AddField(
            model_name="dataingestionlog",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="market_data.datasource"
            ),
        ),
        migrations.AddField(
            model_name="ticker",
            name="exchange",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="market_data.exchange",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="ticker",
            unique_together={("symbol", "exchange")},
        ),
        migrations.AddField(
            model_name="fundamentaldata",
            name="ticker",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fundamentals",
                to="market_data.ticker",
            ),
        ),
        migrations.AddField(
            model_name="ticker",
            name="industry",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="market_data.industry",
            ),
        ),
        migrations.AddField(
            model_name="portfolio",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="portfolios",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="position",
            name="portfolio",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="positions",
                to="market_data.portfolio",
            ),
        ),
        migrations.AddField(
            model_name="position",
            name="ticker",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="market_data.ticker"
            ),
        ),
        migrations.AddField(
            model_name="industry",
            name="sector",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="market_data.sector"
            ),
        ),
        migrations.AddField(
            model_name="ticker",
            name="sector",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="market_data.sector",
            ),
        ),
        migrations.AddIndex(
            model_name="ticker",
            index=models.Index(fields=["symbol"], name="market_data_symbol_a214e5_idx"),
        ),
        migrations.AddIndex(
            model_name="ticker",
            index=models.Index(
                fields=["exchange", "sector"], name="market_data_exchang_d4f089_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticker",
            index=models.Index(
                fields=["country", "is_active"], name="market_data_country_a22baa_idx"
            ),
        ),
        migrations.AddField(
            model_name="technicalindicator",
            name="ticker",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="indicators",
                to="market_data.ticker",
            ),
        ),
        migrations.AddIndex(
            model_name="fundamentaldata",
            index=models.Index(
                fields=["ticker", "report_date"], name="market_data_ticker__1f147a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="fundamentaldata",
            index=models.Index(
                fields=["period_type", "report_date"],
                name="market_data_period__344a60_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="fundamentaldata",
            unique_together={("ticker", "report_date", "period_type")},
        ),
        migrations.AlterUniqueTogether(
            name="position",
            unique_together={("portfolio", "ticker")},
        ),
        migrations.AddIndex(
            model_name="technicalindicator",
            index=models.Index(
                fields=["ticker", "indicator_name", "timestamp"],
                name="market_data_ticker__883611_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="technicalindicator",
            index=models.Index(
                fields=["indicator_name", "timestamp"],
                name="market_data_indicat_9c7a6b_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="technicalindicator",
            unique_together={("ticker", "timestamp", "timeframe", "indicator_name")},
        ),
    ]
